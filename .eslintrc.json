{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "prettier"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended", "prettier"],
      "rules": {
        // "no-unused-vars": "off",
        "no-forward-ref": "off",
        "no-nested-ternary": "error",
        // "@typescript-eslint/no-unused-vars": ["error"],
        "@angular-eslint/component-max-inline-declarations": "error",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase", "snake_case", "PascalCase", "UPPER_CASE"]
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "parameter",
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "memberLike",
            "modifiers": ["private"],
            "format": ["camelCase"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "typeProperty",
            "format": ["camelCase", "snake_case", "PascalCase"]
          },
          {
            "selector": "objectLiteralProperty",
            "format": ["PascalCase", "camelCase", "snake_case", "UPPER_CASE"]
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "lfx",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "lfx",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/no-attribute-decorator": "error",
        "@angular-eslint/no-forward-ref": "error",
        "@angular-eslint/no-lifecycle-call": "error",
        "@angular-eslint/no-pipe-impure": "error",
        "@angular-eslint/no-queries-metadata-property": "error",
        "@angular-eslint/prefer-output-readonly": "error",
        "@angular-eslint/use-component-selector": "error",
        "@angular-eslint/use-component-view-encapsulation": "error",
        "@typescript-eslint/no-extraneous-class": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/unbound-method": "off",
        "class-methods-use-this": "off",
        "import/no-extraneous-dependencies": "off",
        "import/no-internal-modules": "off",
        "import/no-unassigned-import": "off",
        "no-constant-condition": "off",
        "no-empty": "error",
        "comma-dangle": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/explicit-member-accessibility": "warn",
        "no-console": "off",
        "no-restricted-syntax": [
          "error",
          {
            "selector": "CallExpression[callee.object.name='console'][callee.property.name!=/^(warn|error|info|trace)$/]",
            "message": "Only warn, error, info and trace allowed to be committed into code"
          }
        ],
        "max-len": [
          "error",
          {
            "code": 160,
            "ignoreUrls": true
          }
        ],
        "no-else-return": "error",
        "array-bracket-spacing": "error",
        "block-spacing": [2, "always"],
        "brace-style": [2, "1tbs", { "allowSingleLine": true }],
        "comma-spacing": [2, { "before": false, "after": true }],
        "no-whitespace-before-property": "error",
        "radix": "off",
        "@typescript-eslint/member-ordering": [
          2,
          {
            "default": [
              "decorated-field", // = ["public-decorated-field", "protected-decorated-field", "private-decorated-field"]
              "field",
              "public-constructor",
              "public-method", // = ["public-static-method", "public-instance-method"]
              "protected-method", // = ["protected-static-method", "protected-instance-method"]
              "private-method" // = ["private-static-method", "private-instance-method"]
            ]
          }
        ],
        "import/order": ["error"],
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@angular-eslint/no-empty-lifecycle-method": "off"
      }
    }
  ]
}
